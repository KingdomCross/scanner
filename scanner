#!/usr/bin/python3

# Anthony Giacalone
# CECS 444
# Full Scanner

# import the tables
from statetable import *
from actiontable import *
from lookuptable import *
from rwords import *
from codes import *
from tokens import *
from output import *

# Choose the file to scan
scanned_file = open('sample.txt').read().strip(' ')  # read in file and strip lead/trail whitespace

# Here starts the main portion of the program
state = 0
token_status = ""
counter = 0
buffered = 0
id_table = []
final_print = ""

while counter < len(scanned_file):
    token = scanned_file[counter]           # token variable is the actual char input
    
    # compare the various tokens and determine state table value
    current_read = tokens.gettoken(token)
    
    if (statetable.gettable(state, current_read) != -1) and (actiontable.gettable(state, current_read) == 1):     
        token_status = token_status + token         # token_status is the accumulated chars
        state = statetable.gettable(state, current_read)
        buffered = 0
    
    elif (statetable.gettable(state, current_read) == -1) and (actiontable.gettable(state, current_read) == 2):
        # Halting condition
        buffered = 1
        result = codes.getcode(lookuptable.gettable(state, current_read))
        if result == "id":
            if rwords.check_rword(token_status) == True:
                result = "reservedword"
            else:
                try:
                    table_check = id_table.index(token_status)
                except ValueError:
                    id_table.append(token_status + '\n')

        if result != "space":
            final_print += "Token Discovered is " + result + " -> " + token_status.rstrip() + '\n'
        state = 0
        token_status = ""    # clear the token buffer

    if buffered != 1:
        counter += 1
        
    else: buffered = 0
    # end while loop

output.output_gui('Tokens Scanned:', 'Scanner', final_print)
output.output_gui('ID Table:', 'Scanner', id_table)
print("Done scanning")       # end of scanner
