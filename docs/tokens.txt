grave: `
lbracket: <
rbracket: >
lbrace: [
rbrace: ]
lsquig: {
rsquig: }
at: @
ampersand: &
hash: #
bang: !
tilde: ~
squote: '
dquote: "
dollar: $
colon: :
semicolon: ;
period: .
comma: ,
plus: +
minus: -
slash: /
backslash: \
star: *
equal: =
carat: ^
lparen: (
rparen: )
ddash: --
dplus: ++
plusminus: +-
minusplus: -+
greatereq: >=
lesseq: <=
noteq: !=
spaceshp: <>
eqeq: ==
coloneq: :=
dless: <<
dgreater: >>
slasheq: /=
dbang: !!
dcolon: ::
id: L(L|D)*((_+(L|D)+))*
integer: D+| -D+
integer: (D?D?D,)?((DDD,)*DDD)
integer: -(D?D?D,)?((DDD,)*DDD)
currency: $((D+|(D?D?D,)?((DDD,)*DDD)).DD|.DD)
library: #L(L|D)*<L(L|D)+.L>
library: #L(L|D)*<L(L|D)+>
library: #L(L|D)*"L(L|D)+.L?L?L?"
fixed: D+.((D?D?D*)|((DDD,)*D?D?D))|(D?D?D,)?((DDD,)*DDD).((D?D?D*)|((DDD,)*D?D?D))
scinotation: D.D+^(+|-)D
scinotation: D.D+^(+|-)DD
scinotation: D.D+^(+|-)DDD
file: [L:(L|D)+]
file: [L:(L|D)+.(L|D)*]
string: "([^"]|")*"
comment: //[^n]*n
comment: /*(*[^/]|[^*])* */
comment: {*(*[^}]|[^*])**}
whspace:  

