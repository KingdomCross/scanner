tilda:\`
leftbracket:\<
rightbracket:\>
leftbrace:\[
rightbrace:\]
leftsquig:\{
rightsquig:\}
atsymbol:\@
ampersand:\&
pound:\#
bang:\!
squigly:\~
singlequote:\'
#####################doublequote:\"
dollarsign:\$
colon:\:
semicolon:\;
period:\.
comma:\,
plus:\+
minus:\-
slash:/
backslash:\\
star:\*
equal:\=
carat:\^
leftparen:\(
rightparen:\)
ddash:\-\-
dplus:\+\+
plusminus:\+\-
minusplus:\-\+
greatereq:\>\=
lesseq:\<\=
noteq:\!\=
spaceship:\<\>
eqeq:\=\=
coloneq:\:\=
dless:\<\<
dgreater:\>\>
slasheq:/=
dbang:\!\!
id:L(L|D)*((_+(L|D)+))*
integer:D+|\-D+
integer:(D?D?D,)?((DDD,)*DDD)
integer:\-(D?D?D,)?((DDD,)*DDD)
currency:\$(D+.DD|.DD)
currency:\$(D,DDD.DD|DD,DDD.DD|DDD,DDD.DD|D,DDD,DDD.DD|DD,DDD,DDD.DD|DDD,DDD,DDD.DD)
library:#L(L|D)*<L(L|D)+.L>
library:#L(L|D)*<L(L|D)+>
library:#L(L|D)*"L(L|D)+.L?L?L?"
#############################################library:import L(L|D)*L(L|D)*((_+(L|D)+))*.L(L|D)*((_+(L|D)+))*.L(L|D)*((_+(L|D)+))*;
fixed:D*.D+
fixed:D+.D*
fixed:D,DDD.D+|D,DDD.D*|DD,DDD.D+|DD,DDD.D*|DDD,DDD.D+|DDD,DDD.D*|D,DDD,DDD.D+|D,DDD,DDD.D*|DD,DDD,DDD.D+|DD,DDD,DDD.D*|DDD,DDD,DDD.D+|DDD,DDD,DDD.D*|D,DDD,DDD,DDD.D+|D,DDD,DDD,DDD.D*
fixed:D+.DDD,D|D*.DDD,D|D+.DDD,DD|D*.DDD,DD|D+.DDD,DDD|D*.DDD,DDD|D+.DDD,DDD,D|D*.DDD,DDD,D|D+.DDD,DDD,DD|D*.DDD,DDD,DD|D+.DDD,DDD,DDD|D*.DDD,DDD,DDD|D+.DDD,DDD,DDD,D|D*.DDD,DDD,DDD,D
scinotation:D.D+^(\+|\-)D
scinotation:D.D+^(\+|\-)DD
scinotation:D.D+^(\+|\-)DDD
file:\[L:(L|D)+\]
file:\[L:(L|D)+.(L|D)*\]
string:"([^"]|\\")*"
comment://[^\\n]*\n
comment:/\*(\*[^}]|[^*])*\*/
comment:{\*(\*[^}]|[^*])*\*}
space:\ 


### Double quotes bad!
### Library function (last one is ambigious!)
{\*(\*[^}]|[^\*])*\*}  -> multi line comment

L(L|D)*((.L(L|D))|\*)?((.L(L|D))|\*)?
